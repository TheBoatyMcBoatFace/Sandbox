#
#
#   Based on work by:
#              -  https://github.com/marketplace/actions/github-issue-forms-body-parser
#              -  https://github.com/marketplace/actions/issues-helper#get-issue
#
name: Issue Forms Body Parser

on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'The issue number to use'
        required: true
        type: string

  issues:
      types:
          - opened




jobs:
  process:
    name: 🎯 Summarize Text
    runs-on: ubuntu-latest
    steps:

#   Add Cooking Label
      - name: Add 🧑‍🍳 Cooking Label
        uses: actions-cool/issues-helper@v3
        with:
            actions: 'add-labels'
            issue-number: ${{ github.event.issue.number }}
            labels: '🧑‍🍳 Cooking'
            token: ${{ secrets.GH_TOKEN }}



      - name: Get Issue
        id: get-issues
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'get-issue'
          token: ${{ secrets.GH_TOKEN }}

      - name: Get Issue and Stringify Output
        id: get-issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'get-issue'
          token: ${{ secrets.GH_TOKEN }}

#      - name: Set Body Content
 #       id: set-body-content
 #       run: |
  #          echo "BODY_CONTENT=Tacos for lunch" >> $GITHUB_ENV
 #           echo "::set-env name=BODY_CONTENT::${{ steps.get-issue.outputs.issue-body }}"
#${{ toJson(steps.get-issue.outputs.issue-body) }}

#   Reads the incoming issue body
#      - name: 🐶🦴Fetch Issue
#        id: read_issue_body
#        uses: actions-cool/issues-helper@v3
#        with:
#            actions: 'get-issue'
#            token: ${{ secrets.GH_TOKEN }}


            #   Parse the issue body
#      - name: ➗Parse the Body
#        id: parse
#        uses: zentered/issue-forms-body-parser@v2.0.0
#        with:
#            body: ${{ steps.read_issue_body.output.issue-body }}
#            token: ${{ secrets.GH_TOKEN }}


# Output from above Parse the Body
#      - name: 🔨Create Variables
 #       run: echo "::create-vars name=prompty::$PROMPT"
#        env:
#            TEXT: ${steps.parse.outputs.data}
#            PROMPT: "Create a tl;dr of the following text\n\n${{ steps.read_issue_body.output.issue-body }}"



#   Send the curl request
      - name: 🚀Make API Request
        id: api_request
        uses: fjogeleit/http-request-action@v1
        with:
            url: 'https://api.openai.com/v1/completions'
            method: 'POST'
            username:
            password: ${{ secrets.OPENAI_API_KEY }}
            timeout: 15000
            customHeaders: '{"Content-Type": "application/json"}'
            data: '{
             "model": "gpt-3.5-turbo",
             "prompt": "$BODY_CONTENT",
             "temperature": 0.7,
             "max_tokens": 256,
             "top_p": 1,
             "frequency_penalty": 0,
             "presence_penalty": 0
             }'
            BODY_CONTENT:  ${{ steps.get-issue.outputs.issue-body }} tacos



      - name: Show Response
        run: |
            echo ${{ steps.api_request.outputs.response }}
#            echo ${{ steps.api_request.outputs.headers }}
#            echo ${{ fromJson(steps.api_request.outputs.response).choices.text }}

      - name: 💬Comment on Issue
        uses: actions-cool/issues-helper@v3
        with:
            actions: 'create-comment'
            issue-number: ${{ github.event.issue.number }}
            body: Hello ${{ github.event.issue.user.login }},
             Here is your summary

             ${{ steps.api_request.outputs.response }}
            emoji: hooray
            token: ${{ secrets.GH_TOKEN }}

      - name: Mark as ✅ Done
        uses: actions-cool/issues-helper@v3
        with:
            actions: 'add-labels'
            issue-number: ${{ github.event.issue.number }}
            labels: '✅ Done'
            token: ${{ secrets.GH_TOKEN }}

      - name: Stop 🧑‍🍳 Cooking
        uses: actions-cool/issues-helper@v3
        with:
            actions: 'remove-labels'
            issue-number: ${{ github.event.issue.number }}
            labels: '🧑‍🍳 Cooking'
            token: ${{ secrets.GH_TOKEN }}

      - name: Issue is not 📚 Too Much Text 😁
        uses: actions-cool/issues-helper@v3
        with:
            actions: 'remove-labels'
            issue-number: ${{ github.event.issue.number }}
            labels: '📚 Too Much Text'
            token: ${{ secrets.GH_TOKEN }}

      - name: Close Issue
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GH_TOKEN }}
          issue-number: ${{ github.event.issue.number }}


